{"ast":null,"code":"var _jsxFileName = \"D:\\\\SecureCloud\\\\frontend\\\\src\\\\pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography, CircularProgress, Grid, Card, CardContent } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/dashboard\"); // Add this endpoint in your backend\n        setFiles(response.data.files);\n      } catch (error) {\n        console.error(\"Error fetching files:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: \"100vh\",\n      padding: 4,\n      backgroundColor: \"#f4f6f8\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      color: \"primary\",\n      children: \"Decentralized Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        marginTop: 2\n      },\n      children: files.map(file => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"textPrimary\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n              children: \"Chunks:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: file.chunks.map((chunk, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Node: \", chunk.node, \" | IPFS Hash: \", chunk.hash]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, file.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"zMnqggxtwlDmTOERg77mrfWXT00=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","CircularProgress","Grid","Card","CardContent","axios","jsxDEV","_jsxDEV","DashboardPage","_s","files","setFiles","loading","setLoading","fetchFiles","response","get","data","error","console","sx","display","flexDirection","alignItems","justifyContent","minHeight","padding","backgroundColor","children","variant","gutterBottom","align","color","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","marginTop","map","file","item","xs","sm","md","name","chunks","chunk","index","node","hash","_c","$RefreshReg$"],"sources":["D:/SecureCloud/frontend/src/pages/DashboardPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Box, Typography, CircularProgress, Grid, Card, CardContent } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nconst DashboardPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:5000/dashboard\"); // Add this endpoint in your backend\r\n        setFiles(response.data.files);\r\n      } catch (error) {\r\n        console.error(\"Error fetching files:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        minHeight: \"100vh\",\r\n        padding: 4,\r\n        backgroundColor: \"#f4f6f8\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\" color=\"primary\">\r\n        Decentralized Files\r\n      </Typography>\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Grid container spacing={2} sx={{ marginTop: 2 }}>\r\n          {files.map((file) => (\r\n            <Grid item xs={12} sm={6} md={4} key={file.name}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" color=\"textPrimary\">\r\n                    {file.name}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Chunks:\r\n                  </Typography>\r\n                  <ul>\r\n                    {file.chunks.map((chunk, index) => (\r\n                      <li key={index}>\r\n                        Node: {chunk.node} | IPFS Hash: {chunk.hash}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,IAAI,EAAEC,IAAI,EAAEC,WAAW,QAAQ,eAAe;AAC1F,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAAC;QACrEL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAACP,KAAK,CAAC;MAC/B,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACR,GAAG;IACFqB,EAAE,EAAE;MACFC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,SAAS,EAAE,OAAO;MAClBC,OAAO,EAAE,CAAC;MACVC,eAAe,EAAE;IACnB,CAAE;IAAAC,QAAA,gBAEFrB,OAAA,CAACP,UAAU;MAAC6B,OAAO,EAAC,IAAI;MAACC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAC,SAAS;MAAAJ,QAAA,EAAC;IAErE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACZxB,OAAO,gBACNL,OAAA,CAACN,gBAAgB;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEpB7B,OAAA,CAACL,IAAI;MAACmC,SAAS;MAACC,OAAO,EAAE,CAAE;MAAClB,EAAE,EAAE;QAAEmB,SAAS,EAAE;MAAE,CAAE;MAAAX,QAAA,EAC9ClB,KAAK,CAAC8B,GAAG,CAAEC,IAAI,iBACdlC,OAAA,CAACL,IAAI;QAACwC,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAjB,QAAA,eAC9BrB,OAAA,CAACJ,IAAI;UAAAyB,QAAA,eACHrB,OAAA,CAACH,WAAW;YAAAwB,QAAA,gBACVrB,OAAA,CAACP,UAAU;cAAC6B,OAAO,EAAC,IAAI;cAACG,KAAK,EAAC,aAAa;cAAAJ,QAAA,EACzCa,IAAI,CAACK;YAAI;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACb7B,OAAA,CAACP,UAAU;cAAC6B,OAAO,EAAC,WAAW;cAACG,KAAK,EAAC,eAAe;cAAAJ,QAAA,EAAC;YAEtD;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb7B,OAAA;cAAAqB,QAAA,EACGa,IAAI,CAACM,MAAM,CAACP,GAAG,CAAC,CAACQ,KAAK,EAAEC,KAAK,kBAC5B1C,OAAA;gBAAAqB,QAAA,GAAgB,QACR,EAACoB,KAAK,CAACE,IAAI,EAAC,gBAAc,EAACF,KAAK,CAACG,IAAI;cAAA,GADpCF,KAAK;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAjB6BK,IAAI,CAACK,IAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBzC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/DID,aAAa;AAAA4C,EAAA,GAAb5C,aAAa;AAiEnB,eAAeA,aAAa;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}